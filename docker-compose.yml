version: "3.8"

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: kubsu
      POSTGRES_PASSWORD: kubsu
      POSTGRES_DB: kubsu
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kubsu -d kubsu"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - app-network

  app:
    build:
      context: .
      target: final
    ports:
      - "8022:8022"
    environment:
      DATABASE_URL: postgresql+psycopg://kubsu:kubsu@db:5432/kubsu
      ENVIRONMENT: development
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./src:/app/src:ro
    networks:
      - app-network
    profiles:
      - dev

  app-prod:
    build:
      context: .
      target: final
    ports:
      - "8022:8022"
    environment:
      DATABASE_URL: postgresql+psycopg://kubsu:kubsu@db:5432/kubsu
      ENVIRONMENT: production
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - prod

  test:
    build:
      context: .
      target: final
    environment:
      DATABASE_URL: postgresql+psycopg://kubsu:kubsu@db:5432/kubsu
      PYTHONPATH: /app
    depends_on:
      db:
        condition: service_healthy
    command: python -m pytest -v tests/
    networks:
      - app-network
    profiles:
      - test

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
