name: CI/CD

on:
  push:
    branches: ["main", "master"]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: kubsu
          POSTGRES_PASSWORD: kubsu
          POSTGRES_DB: kubsu
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      
      - name: Build and test
        run: |
          docker build -t test-image .
          docker run --rm --network host \
            -e DATABASE_URL="postgresql+psycopg://kubsu:kubsu@localhost:5432/kubsu" \
            test-image python -m pytest -v tests/

  deploy:
    needs: test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            echo "üßπ Cleaning up old deployment..."
            rm -rf /tmp/kubsu-deploy
            mkdir -p /tmp/kubsu-deploy
            
      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ secrets.SSH_PORT || 22 }}
          source: "src/,tests/,Dockerfile,docker-compose.prod.yml,pyproject.toml,init.sql"
          target: "/tmp/kubsu-deploy/"
          
      - name: Deploy with compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            cd /tmp/kubsu-deploy
            
            echo "üóÇÔ∏è Creating data directory..."
            sudo mkdir -p /var/lib/kubsu/postgres_data
            sudo chown -R $(whoami):$(whoami) /var/lib/kubsu/ || true
            
            echo "üõë Stopping old services..."
            podman-compose -f docker-compose.prod.yml down || docker-compose -f docker-compose.prod.yml down || true
            
            echo "üöÄ Starting services with compose..."
            podman-compose -f docker-compose.prod.yml up -d --build || docker-compose -f docker-compose.prod.yml up -d --build
            
            echo "‚è≥ Waiting 15 seconds for services to start..."
            sleep 15
            
            echo "üìã Services status:"
            podman-compose -f docker-compose.prod.yml ps || docker-compose -f docker-compose.prod.yml ps
            
            echo "üìù App logs:"
            podman-compose -f docker-compose.prod.yml logs app --tail 10 || docker-compose -f docker-compose.prod.yml logs app --tail 10
            
            echo "üîç Health check:"
            curl -f http://localhost:8022/health || echo "‚ùå Health check failed"
